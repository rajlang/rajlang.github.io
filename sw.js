(()=>{"use strict";var e={913:()=>{try{self["workbox:core:6.2.4"]&&_()}catch(e){}},977:()=>{try{self["workbox:precaching:6.2.4"]&&_()}catch(e){}},80:()=>{try{self["workbox:routing:6.2.4"]&&_()}catch(e){}},873:()=>{try{self["workbox:strategies:6.2.4"]&&_()}catch(e){}}},t={};function s(a){var n=t[a];if(void 0!==n)return n.exports;var i=t[a]={exports:{}};return e[a](i,i.exports,s),i.exports}(()=>{s(913);const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}const a={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},n=e=>[a.prefix,e,a.suffix].filter((e=>e&&e.length>0)).join("-"),i=e=>e||n(a.precache),r=e=>e||n(a.runtime);function c(e,t){const s=t();return e.waitUntil(s),s}s(977);function o(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:a}=e;if(!a)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(a,location.href);return{cacheKey:e.href,url:e.href}}const n=new URL(a,location.href),i=new URL(a,location.href);return n.searchParams.set("__WB_REVISION__",s),{cacheKey:n.href,url:i.href}}class h{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class l{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this._precacheController=e}}let u;async function f(e,s){let a=null;if(e.url){a=new URL(e.url).origin}if(a!==self.location.origin)throw new t("cross-origin-copy-response",{origin:a});const n=e.clone(),i={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},r=s?s(i):i,c=function(){if(void 0===u){const e=new Response("");if("body"in e)try{new Response(e.body),u=!0}catch(e){u=!1}u=!1}return u}()?n.body:await n.blob();return new Response(c,r)}function d(e,t){const s=new URL(e);for(const e of t)s.searchParams.delete(e);return s.href}class p{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const g=new Set;s(873);function y(e){return"string"==typeof e?new Request(e):e}class w{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new p,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:s}=this;let a=y(e);if("navigate"===a.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const n=this.hasCallback("fetchDidFail")?a.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))a=await e({request:a.clone(),event:s})}catch(e){if(e instanceof Error)throw new t("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}const i=a.clone();try{let e;e=await fetch(a,"navigate"===a.mode?void 0:this._strategy.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:i,response:e});return e}catch(e){throw n&&await this.runCallbacks("fetchDidFail",{error:e,event:s,originalRequest:n.clone(),request:i.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=y(e);let s;const{cacheName:a,matchOptions:n}=this._strategy,i=await this.getCacheKey(t,"read"),r=Object.assign(Object.assign({},n),{cacheName:a});s=await caches.match(i,r);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await e({cacheName:a,matchOptions:n,cachedResponse:s,request:i,event:this.event})||void 0;return s}async cachePut(e,s){const a=y(e);var n;await(n=0,new Promise((e=>setTimeout(e,n))));const i=await this.getCacheKey(a,"write");if(!s)throw new t("cache-put-with-no-response",{url:(r=i.url,new URL(String(r),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var r;const c=await this._ensureResponseSafeToCache(s);if(!c)return!1;const{cacheName:o,matchOptions:h}=this._strategy,l=await self.caches.open(o),u=this.hasCallback("cacheDidUpdate"),f=u?await async function(e,t,s,a){const n=d(t.url,s);if(t.url===n)return e.match(t,a);const i=Object.assign(Object.assign({},a),{ignoreSearch:!0}),r=await e.keys(t,i);for(const t of r)if(n===d(t.url,s))return e.match(t,a)}(l,i.clone(),["__WB_REVISION__"],h):null;try{await l.put(i,u?c.clone():c)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){for(const e of g)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:o,oldResponse:f,newResponse:c.clone(),request:i,event:this.event});return!0}async getCacheKey(e,t){if(!this._cacheKeys[t]){let s=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))s=y(await e({mode:t,request:s,event:this.event,params:this.params}));this._cacheKeys[t]=s}return this._cacheKeys[t]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const s=this._pluginStateMap.get(t),a=a=>{const n=Object.assign(Object.assign({},a),{state:s});return t[e](n)};yield a}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class _ extends class{constructor(e={}){this.cacheName=r(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,a="params"in e?e.params:void 0,n=new w(this,{event:t,request:s,params:a}),i=this._getResponse(n,s,t);return[i,this._awaitComplete(i,n,s,t)]}async _getResponse(e,s,a){let n;await e.runCallbacks("handlerWillStart",{event:a,request:s});try{if(n=await this._handle(s,e),!n||"error"===n.type)throw new t("no-response",{url:s.url})}catch(t){if(t instanceof Error)for(const i of e.iterateCallbacks("handlerDidError"))if(n=await i({error:t,event:a,request:s}),n)break;if(!n)throw t}for(const t of e.iterateCallbacks("handlerWillRespond"))n=await t({event:a,request:s,response:n});return n}async _awaitComplete(e,t,s,a){let n,i;try{n=await e}catch(i){}try{await t.runCallbacks("handlerDidRespond",{event:a,request:s,response:n}),await t.doneWaiting()}catch(e){e instanceof Error&&(i=e)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:s,response:n,error:i}),t.destroy(),i)throw i}}{constructor(e={}){e.cacheName=i(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(_.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,s){let a;const n=s.params||{};if(!this._fallbackToNetwork)throw new t("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{0;const t=n.integrity,i=e.integrity,r=!i||i===t;if(a=await s.fetch(new Request(e,{integrity:i||t})),t&&r){this._useDefaultCacheabilityPluginIfNeeded();await s.cachePut(e,a.clone());0}}return a}async _handleInstall(e,s){this._useDefaultCacheabilityPluginIfNeeded();const a=await s.fetch(e);if(!await s.cachePut(e,a.clone()))throw new t("bad-precaching-response",{url:e.url,status:a.status});return a}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,a]of this.plugins.entries())a!==_.copyRedirectedCacheableResponsesPlugin&&(a===_.defaultPrecacheCacheabilityPlugin&&(e=s),a.cacheWillUpdate&&t++);0===t?this.plugins.push(_.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}_.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},_.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await f(e):e};class v{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new _({cacheName:i(e),plugins:[...t,new l({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const s=[];for(const a of e){"string"==typeof a?s.push(a):a&&void 0===a.revision&&s.push(a.url);const{cacheKey:e,url:n}=o(a),i="string"!=typeof a&&a.revision?"reload":"default";if(this._urlsToCacheKeys.has(n)&&this._urlsToCacheKeys.get(n)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(n),secondEntry:e});if("string"!=typeof a&&a.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==a.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:n});this._cacheKeysToIntegrities.set(e,a.integrity)}if(this._urlsToCacheKeys.set(n,e),this._urlsToCacheModes.set(n,i),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return c(e,(async()=>{const t=new h;this.strategy.plugins.push(t);for(const[t,s]of this._urlsToCacheKeys){const a=this._cacheKeysToIntegrities.get(s),n=this._urlsToCacheModes.get(t),i=new Request(t,{integrity:a,cache:n,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:i,event:e}))}const{updatedURLs:s,notUpdatedURLs:a}=t;return{updatedURLs:s,notUpdatedURLs:a}}))}activate(e){return c(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),a=[];for(const n of t)s.has(n.url)||(await e.delete(n),a.push(n.url));return{deletedURLs:a}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(e){const s=this.getCacheKeyForURL(e);if(!s)throw new t("non-precached-url",{url:e});return t=>(t.request=new Request(e),t.params=Object.assign({cacheKey:s},t.params),this.strategy.handle(t))}}s(80);(async()=>{const e=function(){const e=JSON.parse(new URLSearchParams(self.location.search).get("params"));return e.debug&&console.log("[Docusaurus-PWA][SW]: Service Worker params:",e),e}(),t=[{"revision":"7fb7c5166d11a13e04600e294ec93b21","url":"404.html"},{"revision":"2a8e9c9b9a7344353fd7b4d64fa50542","url":"assets/css/styles.85437db7.css"},{"revision":"58323f026cd6aeb36e13bbc1b2fd779f","url":"assets/js/01a85c17.76332326.js"},{"revision":"758cef9ddab461688942e431ebf8e5b6","url":"assets/js/031793e1.ef81d649.js"},{"revision":"f7bdab261a74c2c4a1de17bb3c1200d7","url":"assets/js/0e384e19.41b5dd2b.js"},{"revision":"9a093c4b5c95221379b85d0f77132435","url":"assets/js/131.e9188d71.js"},{"revision":"7d3bd5be95a0eef059187413936a651a","url":"assets/js/17896441.0a5d0eca.js"},{"revision":"62415147f03ca30dea21c00d7ea77822","url":"assets/js/1be78505.e1ba530d.js"},{"revision":"9c5752f7de242bb32505d3967f0d49ef","url":"assets/js/1f391b9e.be62bdf7.js"},{"revision":"2075957627003f18a0b7dacdfeeccf36","url":"assets/js/30a24c52.f2a99dc9.js"},{"revision":"64564e6fa2222ddda7ae5da21239998f","url":"assets/js/444.c4b44898.js"},{"revision":"fdcbff01c3b3e77d564eb0af933e13d5","url":"assets/js/59362658.83eb7339.js"},{"revision":"858d97c08c81153a89c9b4d30195f83b","url":"assets/js/6875c492.2a07ec15.js"},{"revision":"1c5b5b3bcd874ef40d54c68cbf1b7e73","url":"assets/js/73664a40.00433ae4.js"},{"revision":"a4ae70c79f675d100dfc2bf371df3e3c","url":"assets/js/744.d0dcb81c.js"},{"revision":"66de1a53d460298adf046475dabe848f","url":"assets/js/75.792e5416.js"},{"revision":"1557f3e3a0697bbb187c97581130d2ad","url":"assets/js/7661071f.8ba663a4.js"},{"revision":"4c9269c3ef47d49538164e6307026ed5","url":"assets/js/814f3328.cf615b79.js"},{"revision":"148d58ab67366a88ba258f61d2f68cd4","url":"assets/js/8717b14a.3eafda80.js"},{"revision":"1018e2d09867c1a3d4dc199e3d68d86a","url":"assets/js/923.9c5614ae.js"},{"revision":"8a9bcef5d8f173b6e880d3ee4edc9c39","url":"assets/js/925b3f96.20927821.js"},{"revision":"c69216fd25eb801bc909a904531e91be","url":"assets/js/935f2afb.e4897fe6.js"},{"revision":"3da1c958d6985ec0d1788337f500c979","url":"assets/js/9e4087bc.4617ca86.js"},{"revision":"03c3ef12872309421761229c22ed35fd","url":"assets/js/a6aa9e1f.914965a0.js"},{"revision":"a8bf852ae6e1e0346f11b1474968ff6c","url":"assets/js/a7023ddc.661d0727.js"},{"revision":"7c261a4c0b0c346c683c672f8affa591","url":"assets/js/a80da1cf.4fbf72fa.js"},{"revision":"c616ef6107cbb47029f6c6b8bc4a0aae","url":"assets/js/b2b675dd.8ecdbc6f.js"},{"revision":"f8b95df9c110fcc50da5c6bdc145a9b5","url":"assets/js/b2f554cd.b2390e79.js"},{"revision":"23e64032ede485dcbdeb4e26a348911e","url":"assets/js/b89d528a.b8f40a51.js"},{"revision":"d33783dad47a9070f907fdb1edc829f2","url":"assets/js/c4f5d8e4.196498cb.js"},{"revision":"a88669ee10f92903afd973cf0839e52b","url":"assets/js/ccc49370.9d2005cb.js"},{"revision":"cb9c799451c4b83b3850b171f0c068b4","url":"assets/js/common.17b5a5c3.js"},{"revision":"ce92f0099ed65e04bff417c754a419b6","url":"assets/js/d9f32620.44699861.js"},{"revision":"37c98ee92e2ede9e77a81582cf27f6c4","url":"assets/js/e16015ca.3faf5b20.js"},{"revision":"ab91984e3dd3ae17ba69c0a4f4aae6e7","url":"assets/js/e273c56f.300c0d1c.js"},{"revision":"53ae5e33f520aea3dcfebecb573685be","url":"assets/js/f4f34a3a.1a3cad39.js"},{"revision":"c8bfe4d740c0f54c8f7f4b8b61b055b7","url":"assets/js/main.bbb55387.js"},{"revision":"14e830d80c1384a683d4b66faf3ed368","url":"assets/js/runtime~main.e1f98081.js"},{"revision":"3b89173f7ffa80910e2365f3e6cf6c17","url":"blog/archive/index.html"},{"revision":"19ef81418f1df3a7d27e3409d0536979","url":"blog/first-blog-post/index.html"},{"revision":"21b1f5b26f2eb4730090c1420e6b9978","url":"blog/index.html"},{"revision":"97e8215271d14e99661773958c69e22a","url":"blog/long-blog-post/index.html"},{"revision":"66d73deab5d46e1cc85a8363069f01f8","url":"blog/mdx-blog-post/index.html"},{"revision":"0f7a09173c008dac047e9539801272d8","url":"blog/tags/docusaurus/index.html"},{"revision":"8f34d3bf650ab5d3b8a4276381ebd3ff","url":"blog/tags/facebook/index.html"},{"revision":"1e02a188286402288f7e6de81ddd29f1","url":"blog/tags/hello/index.html"},{"revision":"0e804fc573c3d67415dc091346281675","url":"blog/tags/hola/index.html"},{"revision":"a1ef7a6d6f72e69eca6ab9191970d0b5","url":"blog/tags/index.html"},{"revision":"6b9796a3bafd4d4bf94cf79d9ea41e60","url":"blog/welcome/index.html"},{"revision":"6f6d3d8f0fe899b67f797b1c169fca22","url":"dev/index.html"},{"revision":"a9f61636acc4fd044a08f75be8c7be4a","url":"docs/intro/index.html"},{"revision":"5b08adc5c42002b780c32b308598a61c","url":"index.html"},{"revision":"c1a2f5b5cb7795d971369f05d5aa4a75","url":"manifest.json"},{"revision":"0c314bd098c833f719f9fdd047c0ec2c","url":"assets/images/clouds-402a1b7164b0594e6447d2e92edec1de.png"},{"revision":"192a6a160f31b1689a4c6233bdbbb803","url":"assets/images/docusaurus-plushie-banner-a60f7593abca1e3eef26a9afa244e4fb.jpeg"},{"revision":"81fe6feb382e566219bdf7f6171fd8dd","url":"favicon.ico"},{"revision":"bdf419e322c77da42b1f72c78c75ea1a","url":"favicon.svg"},{"revision":"0c314bd098c833f719f9fdd047c0ec2c","url":"img/clouds.png"},{"revision":"5a010f9f28c5617eb070fbdc65956e86","url":"img/favicon.ico"},{"revision":"94371997cc027e75d44511850c9f4a2b","url":"img/icons/apple-touch-icon.png"},{"revision":"0ecbbdb55681aaba5a0bd29f4959a4ec","url":"img/icons/maskable_icon_x192.png"},{"revision":"6922d909824e08eb2f27ff208fcb2587","url":"img/icons/maskable_icon_x48.png"},{"revision":"192d542c3432a5a73e537bdb6e49a290","url":"img/icons/maskable_icon_x512.png"},{"revision":"541c16aa81bbcb3cd7c7e8f68fa2ff76","url":"img/icons/maskable_icon.png"},{"revision":"6bb1fb07ded48163f1282a2a233d4eb2","url":"img/logo.jpg"},{"revision":"bdf419e322c77da42b1f72c78c75ea1a","url":"img/logo.svg"},{"revision":"1e3c97b35759f276b9b27ff31058f29b","url":"img/logo/logo-bg.svg"},{"revision":"44e90afb3c38f92657a548ccea403f20","url":"img/logo/logo.png"},{"revision":"bdf419e322c77da42b1f72c78c75ea1a","url":"img/logo/logo.svg"},{"revision":"54c01d2d25680b2439bc0cfff64490af","url":"img/Rocket_perspective_matte.png"},{"revision":"e8644a5c3b9694d6304daf7df89fd998","url":"img/stars.png"},{"revision":"54ecfb3e7e15de3c52c4341314d1b599","url":"img/tutorial/docsVersionDropdown.png"},{"revision":"86cf017c4286be0f9d2a99e78a9f97b0","url":"img/tutorial/localeDropdown.png"},{"revision":"d1c734057f4acbc5317b58d6dea3427a","url":"img/twinkling.png"},{"revision":"ffb749bbc1ad6ebfe9e1a817b9f76a0f","url":"img/undraw_dev_focus.svg"},{"revision":"78346a72fd9c54a0e071c1a6efcfcb44","url":"img/undraw_maintenance.svg"},{"revision":"5ef63cb3d15d9bd36b88cabe629da09c","url":"img/undraw_open_source.svg"},{"revision":"688b92f3b71a4c76ee855ed992670c35","url":"img/undraw_programming.svg"},{"revision":"142aa2269df3b3b7655aa792c86d852e","url":"img/undraw_relaxing_at_home.svg"},{"revision":"265758ca49e465aa0a206c908ebc3ba9","url":"img/undraw_to_the_stars.svg"}],s=new v({fallbackToNetwork:!0});e.offlineMode&&(s.addToCacheList(t),e.debug&&console.log("[Docusaurus-PWA][SW]: addToCacheList",{precacheManifest:t})),await async function(e){}(),self.addEventListener("install",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: install event",{event:t}),t.waitUntil(s.install(t))})),self.addEventListener("activate",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: activate event",{event:t}),t.waitUntil(s.activate(t))})),self.addEventListener("fetch",(async t=>{if(e.offlineMode){const a=t.request.url,n=function(e){const t=[],s=new URL(e,self.location.href);return s.origin!==self.location.origin||(s.search="",s.hash="",t.push(s.href),s.pathname.endsWith("/")?t.push(`${s.href}index.html`):t.push(`${s.href}/index.html`)),t}(a);for(let i=0;i<n.length;i+=1){const r=n[i],c=s.getCacheKeyForURL(r);if(c){const s=caches.match(c);e.debug&&console.log("[Docusaurus-PWA][SW]: serving cached asset",{requestURL:a,possibleURL:r,possibleURLs:n,cacheKey:c,cachedResponse:s}),t.respondWith(s);break}}}})),self.addEventListener("message",(async t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: message event",{event:t});"SKIP_WAITING"===(t.data&&t.data.type)&&self.skipWaiting()}))})()})()})();